name: CI/CD Staging

on:
  push:
    branches:
      - staging

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./examples-aspnet-minimalapi/examples-aspnet-minimalapi.sln

      - name: Build and publish
        run: dotnet publish ./examples-aspnet-minimalapi/examples-aspnet-minimalapi.sln -c Release -o output

      - name: Create ZIP
        run: |
          cd output
          zip -r ../app.zip .
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-zip
          path: app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-zip

      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          auth-type: 'service_principal'
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure
        run: |
          az webapp deploy --resource-group deWolf-rg-development-westeurope-01 \
                          --name deWolf-webapp-development-01 \
                          --src-path app.zip

      - name: Set Startup Command
        run: |
          az webapp config set --resource-group deWolf-rg-development-westeurope-01 \
                               --name deWolf-webapp-development-01 \
                               --startup-file "dotnet MinimalAPI.dll"
